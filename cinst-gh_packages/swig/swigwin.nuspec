<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>swig</id>
    <version>3.0.12</version>
    <packageSourceUrl>https://github.com/JourneyOver/chocolatey-packages/tree/master/cinst-gh_packages/swig</packageSourceUrl>
    <owners>JourneyOver</owners>
    <title>SWIG</title>
    <authors>David M. Beazley,William Fulton</authors>
    <projectUrl>http://sourceforge.net/projects/swig</projectUrl>
    <!-- <iconUrl></iconUrl> -->
    <copyright>GNU Public License</copyright>
    <licenseUrl>http://www.swig.org/legal.html</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/swig/swig</projectSourceUrl>
    <docsUrl>http://www.swig.org/doc.html</docsUrl>
    <mailingListUrl>http://www.swig.org/mail.html</mailingListUrl>
    <bugTrackerUrl>http://www.swig.org/bugs.html</bugTrackerUrl>
    <tags>swig C++ scripting bindings wrapping</tags>
    <summary>A code generator for connecting C/C++ with other programming languages</summary>
    <description>SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. SWIG is used with different types of target languages including common scripting languages such as Perl, PHP, Python, Tcl and Ruby. The list of supported languages also includes non-scripting languages such as C#, Common Lisp (CLISP, Allegro CL, CFFI, UFFI), D, Go language, Java, Lua, Modula-3, OCAML, Octave and R. Also several interpreted and compiled Scheme implementations (Guile, MzScheme/Racket, Chicken) are supported. SWIG is most commonly used to create high-level interpreted or compiled programming environments, user interfaces, and as a tool for testing and prototyping C/C++ software. SWIG is typically used to parse C/C++ interfaces and generate the 'glue code' required for the above target languages to call into the C/C++ code. SWIG can also export its parse tree in the form of XML and Lisp s-expressions.</description>
    <releaseNotes>none</releaseNotes>
    <!-- <dependencies>
  </dependencies> -->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
